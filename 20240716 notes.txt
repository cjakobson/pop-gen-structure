analyses to do
Fig 1
-basic breakdown of 1K vs all simulated for ASA and neighbors
	-distributions and summary stats
	-split Ts/Tv
-compare to syn for supp?
-neighbors as function of ASA or vice versa
-by gene -- crossplot summary statistic by gene (ASA vs neighbors)
	-what characteristics to split by? molecular function? essentiality? haploinsufficient? gene age? complex member?
-by amino acid -- which are most constrained?

Fig 2
-break down by secondary structure
	-split by Ts/Tv again to control for aa composition
-neighbors as function of ASA or vice versa for each secondary structure type
-by amino acid again?

Fig 3
-AF histogram for 1K
-slide AF threshold and plot effect size/p-val
-breakdown by secondary structure
-by gene?

Fig 4
-essentially as in Fig 3 but for At and Hs

Fig 5
-example curves over time for nonadapted/adapted
-population growth rates over time
-comapare to mutator => mutation-limited
-validation of growth rate in post-hoc measurements

Fig 6
-WGS summary and breakdown of hits
-pooling and sequencing schematic
-deep dive on Primordium pool hits/frequencies+overlay on structure



data prep
X-alphafold structure PDBs
	-download from AF website
X-dssp .txt files
	-loop_dssp.sh
X-neighbor output .txt files
	-nearby_residues.m
X-check for presence of all 3 files for each systematic name; output gene list to use as background set; output missing structure gene list
	-check_files_systematic.m
-convert DSSP and neighbors to .mat
	-
-generate mutation tables
	-
-merge and save output -- attach gene names to both 1K and all simulated
	-



existing workflow
-mutation simulations based on S288C
	-generate DSSP .txt files
		-loopDssp.sh
	-generate neighbors .txt files
		-nearbyResidues.m
	-convert DSSP and neighbors to .mat
		-getDssp.m		-getNeighbors.m
	[-skip p-site for this analysis]
	-generate mutation tables
		-simulateSnps.m
	-merge and save output [currently this script calls the getX.m functions above]
		-simulateAllSnps.m
-annotate 1K variants
	-annotate VCF with SnpEff
	-import annotated VCF
		-importGenomeDataAnnotated.m
	-match to structure data
		-analyze1kSecondary.m
-compare 1K to all possible
	-need to make new code for this
-similar approach for At and Hs
	-prior output files are on backup HDD
	-just storing protein data (not genotype data) in dependencies might be ok
	-scrapes of Gnomad and 1001 also look good already



other directories
-UP000002311_559292_YEAST
-mutationSimulations/mutationOutput
-pop-gen-structure-dependencies


